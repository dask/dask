[build-system]
requires = ["setuptools>=62.6", "versioneer[toml]==0.29"]
build-backend = "setuptools.build_meta"

[project]
name = "dask"
description = "Parallel PyData with Task Scheduling"
maintainers = [{name = "Matthew Rocklin", email = "mrocklin@gmail.com"}]
license = {text = "BSD-3-Clause"}
keywords = ["task-scheduling parallel numpy pandas pydata"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Distributed Computing",
]
readme = "README.rst"
urls = {Homepage = "https://github.com/dask/dask/"}
requires-python = ">=3.10"
dependencies = [
    # NOTE: These are tested in `continuous_integration/test_imports.sh` If
    # you modify these, make sure to change the corresponding line there.
    "click >= 8.1",
    "cloudpickle >= 3.0.0",
    "fsspec >= 2021.09.0",
    "packaging >= 20.0",
    "partd >= 1.4.0",
    "pyyaml >= 5.3.1",
    "toolz >= 0.10.0",
    # importlib.metadata has the following bugs fixed in 3.10.9 and 3.11.1
    # https://github.com/python/cpython/issues/99130
    # https://github.com/python/cpython/issues/98706
    "importlib_metadata >= 4.13.0; python_version < '3.12' ",
]
dynamic = ["version"]

[project.optional-dependencies]
# NOTE: These are tested in `continuous_integration/test_imports.sh` If
# you modify these, make sure to change the corresponding line there.
array = ["numpy >= 1.24"]
# keeping for backwards compatibility
bag = []
dataframe = [
    "dask[array]",
    "pandas >= 2.0",
    "pyarrow>=14.0.1",
]
distributed = ["distributed == 2025.2.0"]
diagnostics = [
    "bokeh >= 3.1.0",
    "jinja2 >= 2.10.3",
]
# keeping for backwards compatibility
delayed = []
complete = [
    "dask[array,dataframe,distributed,diagnostics]",
    "pyarrow >= 14.0.1",
    "lz4 >= 4.3.2",
]
test = [
    "pandas[test]",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-rerunfailures",
    "pytest-timeout",
    "pytest-xdist",
    "pre-commit",
]

[project.entry-points."dask.array.backends"]
cupy = "dask.array.cupy_entry_point:CupyBackendEntrypoint"

[project.scripts]
dask = "dask.__main__:main"

[tool.setuptools]
include-package-data = true
zip-safe = false
license-files = [
    "LICENSE.txt",
    "dask/array/NUMPY_LICENSE.txt",
]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.package-data]
dask = ["py.typed"]

[tool.isort]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "DISTRIBUTED", "FIRSTPARTY", "LOCALFOLDER"]
profile = "black"
skip_gitignore = true
force_to_top = ["true"]
default_section = "THIRDPARTY"
known_first_party = ["dask"]
known_distributed = ["distributed"]
add_imports = ["from __future__ import annotations"]

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "dask/_version.py"
versionfile_build = "dask/_version.py"
tag_prefix = ""
parentdir_prefix = "dask-"

[tool.pytest.ini_options]
markers = [
    "network: Test requires an internet connection",
    "slow: Skipped unless --runslow passed",
    "gpu: marks tests we want to run on GPUs",
    "skip_with_pyarrow_strings: Tests that should be skipped when pyarrow string conversion is turned on",
    "xfail_with_pyarrow_strings: Tests that should be xfailed when pyarrow string conversion is turned on",
    "array_expr: Tests that are array-expr specific",
]
addopts = "-v -rsfE --durations=10 --color=yes --cov-config=pyproject.toml"
filterwarnings = [
    "error:::dask[.*]",
    "error:::pandas[.*]",
    "error:::numpy[.*]",
    "error:::distributed[.*]",
    # From https://github.com/numpy/numpy/issues/20225
    'ignore:The distutils\.sysconfig module is deprecated, use sysconfig instead:DeprecationWarning:numpy',
    # With no network access, distributed raises a warning when detecting local IP address
    "ignore:Couldn't detect a suitable IP address:RuntimeWarning:distributed",
    # Ignore FutureWarning for change in group_keys behavior: no changes required on the dask side.
    # https://pandas.pydata.org/docs/dev/whatsnew/v1.5.0.html#using-group-keys-with-transformers-in-groupby-apply
    "ignore:Not prepending group keys:FutureWarning",
    "ignore:.*:dask.tests.warning_aliases.RemovedIn20Warning",
    "ignore:When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas:FutureWarning",
    'ignore:Passing a BlockManager to DataFrame is deprecated and will raise in a future version. Use public APIs instead:DeprecationWarning',  # https://github.com/apache/arrow/issues/35081
    'ignore:The previous implementation of stack is deprecated and will be removed in a future version of pandas\.:FutureWarning',
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning",
]
xfail_strict = true
# pytest-timeout settings
# 'thread' kills off the whole test suite. 'signal' only kills the offending test.
# However, 'signal' doesn't work on Windows (due to lack of SIGALRM).
# The CI script modifies this config file on the fly on Linux and MacOS.
timeout_method = "thread"
# This should not be reduced; Windows CI has been observed to be occasionally
# exceptionally slow.
timeout = 300

[tool.mypy]
# Silence errors about Python 3.9-style delayed type annotations on Python 3.8
python_version = "3.10"
# See https://github.com/python/mypy/issues/12286 for automatic multi-platform support
platform = "linux"
# platform = win32
# platform = darwin
plugins = ["numpy.typing.mypy_plugin"]
disallow_untyped_decorators = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
exclude = "dask/dataframe/dask_expr/"

[[tool.mypy.overrides]]

# Recent or recently overhauled modules featuring stricter validation
module = [
    "dask.order",
]
disallow_untyped_defs = true

[tool.codespell]
ignore-words-list = "coo,nd,medias"
skip = "docs/source/changelog.rst"

[tool.coverage.run]
omit = [
    "*/test_*.py",
    "dask/_version.py",
]
source = ["dask"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
]
ignore_errors = true

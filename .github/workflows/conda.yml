name: Conda build
on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  pull_request:
    paths:
      - setup.py
      - continuous_integration/recipe/**
      - .github/workflows/conda.yml
      - pyproject.toml

# When this workflow is queued, automatically cancel any previous running
# or pending jobs from the same branch
concurrency:
  group: conda-${{ github.ref }}
  cancel-in-progress: true

# Required shell entrypoint to have properly activated conda environments
defaults:
  run:
    shell: bash -l {0}

jobs:
  check_tag:
    runs-on: ubuntu-latest
    outputs:
      is_tagged_commit: ${{ steps.check_tag.outputs.is_tagged_commit }}
    steps:
      - uses: actions/checkout@v4.1.5
      - name: Check if the latest commit is tagged
        id: check_tag
        run: |
          if git describe --tags --exact-match HEAD > /dev/null 2>&1; then
            echo "is_tagged_commit=true" >> $GITHUB_OUTPUT
          else
            echo "is_tagged_commit=false" >> $GITHUB_OUTPUT
          fi
  conda:
    name: Build (and upload)
    runs-on: ubuntu-latest
    needs: check_tag
    if: startsWith(github.ref, 'refs/tags/') || needs.check_tag.outputs.is_tagged_commit == 'false'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v3.2.0
        with:
          miniforge-version: latest
          use-mamba: true
          python-version: 3.9
          channel-priority: strict
      - name: Remove outdated conda nightlies
        if: github.event_name == 'push' && github.repository == 'dask/dask' && startsWith(github.ref, 'refs/tags/')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.DASK_CONDA_TOKEN }}
        run: |
          # install anaconda for removal
          mamba install -c conda-forge anaconda-client

          anaconda remove dask/dask-core --force
      - name: Install dependencies
        run: |
          mamba install -c conda-forge boa conda-verify

          which python
          pip list
          mamba list
      - name: Build conda package
        run: |
          # suffix for nightly package versions
          export VERSION_SUFFIX=a`date +%y%m%d`

          conda mambabuild continuous_integration/recipe \
                           --no-anaconda-upload \
                           --output-folder .
      - name: Upload conda package
        if: github.event_name == 'push' && github.repository == 'dask/dask'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.DASK_CONDA_TOKEN }}
        run: |
          # install anaconda for upload
          mamba install -c conda-forge anaconda-client

          anaconda upload --label dev noarch/*.tar.bz2
